cat Makefile
echo $
echo $_1234
echo $_abc
echo $U'SER'
echo "$U"SER
echo $USER
echo $1
echo $%%
echo $^^^^^
echo $abcdef
echo "$USER"
echo '$'USER''
echo $'USER'
echo $"USER"
echo $HOME
echo $NOTEXIST
echo "HOME is $HOME"
export TEST="Hello World"
echo $TEST
unset TEST
echo $TEST
echo $PATH
export PATH="/custom/bin:$PATH"
echo $PATH
export PATH="$PATH:/another/bin"
echo $PATH
echo $?
echo $?$?
echo $?TEST
echo $
echo "$"
echo '$'
echo '$HOME'
echo '$USER $PWD'
echo "$HOME"
echo "$USER in $PWD"
echo "'$HOME'"
echo '"$HOME"'
echo $A$B$C$D$E$F$G$H$I$J$K$L$M$N$O$P$Q$R$S$T$U$V$W$X$Y$Z
echo '\$HOME'
export WEIRD="$HOME $USER $PWD \n \t"
echo "$WEIRD"
export A="Hello"
export B="World"
echo $A$B
export VAR1="TEST"
export VAR2="$VAR1"
echo $VAR2
export TEST1="Hello"
export TEST2="World"
export EMPTY=""
echo "$EMPTY"
echo $EMPTY$HOME
true
echo $?
false
echo $?
echo "Last exit: $?"
echo "$?"
echo $TEST1 $TEST2 $HOME $USER $PWD
export CMD="ls"
$CMD
export FILE="test_file.txt"
export DIR="/tmp"
ls $DIR
echo "$?"
echo '$$$$$$'
echo '$$$$$'
echo '$$$$'
echo '$$$'
echo '$$'
echo '$'
echo ""$""
echo ""$HOME
echo ''$HOME
echo Hello World
pwd
export TEST_VAR=value && echo $TEST_VAR
export TEST_VAR=value && echo $TEST_VAR && unset TEST_VAR && echo $TEST_VAR
export yo=ls && $yo
export X=HOME && echo $X
export X=$HOME && echo $X
echo "$"""
echo $""
echo te$USERst
echo "$USER'$HOME'"'$PATH'
export X="tests" && echo $X
echo "$?"
echo $?
echo "$USER:$HOME"
export _X_Y_Z=test && echo $_X_Y_Z
export X=$USER && echo $X
export X="+test" && echo $X
echo $USER
export TEST=$USER && export TEST2=$TEST && echo $TEST2
export TEST='$USER' && echo $TEST
export TEST="$USER" && echo $TEST
export TEST=$USER && echo $TEST
echo $USER:$HOME
echo test$
export USER_NAME=testuser && echo $USER_NAME
echo a$USER
export X=""quoted"" && echo $X
export X=123 && echo $X
echo 'Hello $USER'
echo 'Single quotes prevent $HOME expansion'
echo "Hello $USER"
echo "My home dir is $HOME"
echo Hello     World
echo "Hello     World"
echo "outside 'inside' outside"
echo 'outside "inside" outside'
echo wor"d"
echo wo'rd'
echo "part1"'part2'"part3"
echo "He said \"Hello\""
echo \"Hello\"
echo "It's working"
echo 'He said "Hello"'
export TEST="Hello World"
echo "$TEST"
echo '$TEST'
echo $TEST
export SPACES="Hello    World"
echo $SPACES
echo "$SPACES"
echo '$SPACES'
echo ""
echo ''
echo "" ''
export A=Hello
export B=World
echo "$A $B"
echo "$A$B"
echo '$A$B'
echo '$(echo not_interpreted)'
echo "Stars * and ? question marks?"
echo 'Stars * and ? question marks?'
export COMPLEX="complex $USER string"
echo "'$COMPLEX'"
echo "\"$COMPLEX\""
export X="first"
export Y="second"
echo "$X $Y"
echo "$X$Y"
echo "$X-$Y"

echo "$"
echo $
echo $USER$HOME$PATH
export X="a>b" && echo "$X"
export X="  spaced  " && echo $X
export X="  spaced  " && echo "$X"
export EMPTY="" && echo "$EMPTY"
echo $USER""test
export a=$'US"ER' && echo $a
export a=$"USER" && echo $a
echo $HOME$"USER"
echo $"USER"
export SINGLEQUOTE="'" && echo $SINGLEQUOTE
echo '$USE''R'
echo $U'SE'R
echo $USER$
echo "$USER'$HOME'$PATH"
echo "'$USER'"
echo '"$USER"'
echo "'$USER'"$HOME
echo "$USER'$HOME'"
echo "$USER"
echo '$USER'$HOME
echo '$USER'
echo $UNDEFINED
echo $USER
echo '''''' | cat
echo "$HOME"
       'ech'o bonjour
e"ch"o bonjour
'echo' "bonjour" "wesh"
>> e
cat "<test.txt"
echo "$'PATH'"
echo $"coucou"
echo $PATH
ls $HOME/Desktop
echo "$PATH""" coucou
echo $PATH"coucou"
echo "hello"$PWD"coucou"
echo coucou$PWD test$COLORTERMlol lol$HOME
echo "bonjour$PATH$PWD"
echo $PATH"coucou"
echo yo
export HELLO=123 && echo $HELLO
export HELLO="beautiful world" && echo $HELLO
echo $?
$EMPTY
echo $?
unset USER
unset PATH
unset PWD
/bin/ls
cd && pwd
export hello
echo *.md
echo built*
echo oi*
echo *.supp
echo 'bye *' bo*s bye
echo 'bye *' mini* bye
echo *ME*
echo "*"
echo * | awk -v RS=" " '{print}' | sort
echo 'bye *' t*.c bye
echo *EMPTY hello READ* world
echo "pip*"
echo *bonus *.supp bonjour
cat ./test_files/infile_big | grep oi
cat minishell.h | grep ");"$
unset HELLO=
unset  A-
unset  HELLO A- WORLD
exit 9223372036854775807
exit -9223372036854775807
echo hello world
echo "hello world"
echo 'hello world'
echo hello'world'
echo hello""world
echo ''
echo "$PWD"
echo '$PWD'
echo "aspas ->'"
echo "aspas -> ' "
echo 'aspas ->"'
echo 'aspas -> " '
echo "> >> < * ? [ ] | ; [ ] || && ( ) & # $ \ <<"
echo '> >> < * ? [ ] | ; [ ] || && ( ) & # $ \ <<'
echo "exit_code ->$? user ->$USER home -> $HOME"
echo "$"
echo '$'
echo $
echo $?
echo $?HELLO
pwd
export hello
export HELLO=123
export HELLO=123 A
export HELLO="123 A-"
export hello world
unset
unset HELLO
unset HELLO1 HELLO2
unset HOME
unset PATH
unset SHELL
cd $PWD
exit 123
exit 298
exit +100
exit "+100"
exit +"100"
exit -100
exit "-100"
exit -"100"
ls >outfile01 && cat outfile01
echo oi || echo tchau
ls * | grep " " > outfile1 && cat outfile1
rm -rf "outfile1" "outfile01" "     test1" "e" "hey" "r1" "r2" "r3" "r4" "test1" "test2" "test3" "test4" "<test.txt" "bonjour" "hello" "hola" "test" "test.txt"
/bin/ls
/bin/pwd
/bin/echo hello
/bin/cat README.md
/usr/bin/grep hello test.txt
/bin/echo hello world test
echo hello world
echo testing spaces
echo hello      world
/bin/ls
echo $?
/bin/ls nonexistentfile
echo $?
ls nonexistentfile
expr $? + $?
echo "hello world"
echo "  multiple   spaces  "
echo "cat lol.c | cat > lol.c"
echo "hello\nworld"
echo "special chars: <>|&;"
echo 'hello world'
echo '  multiple   spaces  '
echo '$USER'
echo 'special chars: <>|&;'
echo '\ backslash'
export TEST1=hello
export TEST2=world
export PATH="/new/path:$PATH"
echo $PATH
export TEST=42
echo $TEST
unset TEST
echo $TEST
export A=1 B=2 C=3
unset A B C
echo $A $B $C
echo hello > file1
echo world > file2
echo append >> file1
ls | grep a
cat file | grep hello | wc -l
ls | grep a | sort | uniq
ls nonexistent | grep a
cat nonexistent | grep test || echo "not found"
ls && pwd && echo success
ls nonexistent && echo "won't print" || echo "error happened"
echo first || echo "won't print"
ls || echo "won't print"
ls nonexistent || echo "recovered from error"
ls nonexistent && echo "won't print" || echo "error recovered"
(ls && echo success) || echo "won't print"
ls *
ls *.c
ls *.txt
ls test*
ls *test
ls *test*
ls *.c *.h
ls test*.txt
ls *test*.txt
cp *.txt backup/
mv test/* ./new_folder/
cat */file.txt
ls * | grep test
ls *.c | wc -l
cat *.txt > all_texts
echo "hello" > test*.txt
ls *.c && echo "found c files"
ls *.txt || echo "no text files"
(ls *.c && gcc *.c) && ./a.out || echo "compilation failed"
(ls *.c && (gcc *.c || echo "compile failed")) && ./a.out
ls *.c && echo "found" || echo "not found"
ls *.c && echo "found" || echo "not found"
(ls *.txt && cat *.txt) || echo "no texts"
mkdir empty && cd empty
ls *
touch "file with spaces.txt"
ls *.c && echo "found c files"
cat *.txt > all_texts
echo "hello" > test*.txt
ls * | grep test
ls *.c | wc -l
cp *.txt backup/
mv test/* ./new_folder/
cat */file.txt
ls *.c *.h
ls test*.txt
ls *test*.txt
ls test*
ls *test
ls *test*
ls *.c
ls nonexistent && echo "won't print" || echo "error recovered"
(ls && echo success) || echo "won't print"
ls nonexistent || echo "recovered from error"
./nonexistent || echo "alternative executed"
echo first || echo "won't print"
ls || echo "won't print"
./nonexistent && echo "won't print"
ls nonexistent && echo "won't print" || echo "error happened"
ls && pwd && echo success
./nonexistent || echo failed
cat nonexistent | grep test || echo "not found"
echo hello > file && cat < file | grep hello > output
cd /tmp && ls -la | grep ^d > dirs && cat dirs
ls nonexistent | grep a
ls | grep a | sort | uniq
ls | grep a
cat file | grep hello | wc -l
cat < input > output
echo test >> file1 > file2
echo hello > file1
echo world > file2
echo append >> file1
cat < file1
grep hello < file1
unset PATH
ls
export PATH=/bin
ls
cd /nonexistent
export A=1 B=2 C=3
unset A B C
echo $A $B $C
export TEST=42
echo $TEST
unset TEST
echo $TEST
export PATH="/new/path:$PATH"
echo $PATH
export TEST1=hello
export TEST2=world
echo $HOME$USER$PWD
echo "$HOME""$USER"
echo "$HOMEfolder"
export FOO=BAR && export $FOO=test && echo $BAR
export TEST=$USER:$HOME && echo $TEST
export var+=test && echo $var
echo "a\$USER b"
echo '\\'
echo hello > file1 > file2 > file3
cat < file1 < file2
echo test > file1 >> file2
echo test >> noexist/file
ls > /dev/null >1
cat < Makefile > out > err
cat nonexistent >> errorlog
cat < Makefile > "file with spaces"
echo hello > out1 > out2 < in1 < in2
> out cat < in
cat Makefile | grep -v "#" | head -n 5 | wc -l
ls | cat -e | cat -e | cat -e
(ls && echo ok) || (echo fail && false)
false || false || false || echo ok
true && true && false && echo "not printed" || echo "printed"
((true && true) || false) && echo complex
true && true && true && echo all true
false || false || true && echo success
./nonexistent_command
ls -Z
cat /etc/shadow
cd /nonexistent/path
>
|
< nonexistentfile
ls < nonexistentfile
&&
(
export =test
unset =test
(ls && echo success) > outfile || echo "Error: $?"
export A=1 && export B=2 && unset A B && echo $A$B
cat nonexistent >1 >/dev/null | grep -i "no such file"
(cd /tmp && ls) | (cd / && grep bin)
find . -name "*.c" >/dev/null | xargs wc -l | sort -nr
test -f Makefile && echo exists || echo missing
ls *.c | (cd /tmp && cat > output) && ls -la /tmp/output
echo "$USER""$HOME"";ls"
echo "a;b;c"
..
.
echo \$USER
ls "" ""
ls /
touch -- -f && rm -f -- -f
echo bonjour > a < cat | ls
/bin/cat Makefile > out >>out1 >out2 | /bin/ls > > | /bin/cat < file
Makefile cat ><tet LOL LOL LOL >outfile
>infile >infile2 <outfile1 cmd >outfileinvalid >outfile5 <infile4 | cat
rm -rf test_dir && mkdir test_dir && cd test_dir && pwd && cd .. && pwd && rm -rf test_dir
mkdir -p path/to/nested/directory && cd path/to/nested/directory && pwd && cd ../.. && pwd && cd ../.. && pwd
rm -rf temp_dir && mkdir temp_dir && cd temp_dir && mkdir subdir && cd subdir && pwd && cd .. && rmdir subdir && cd subdir > /dev/null || echo "Directory not found" && cd .. && rm -rf temp_dir
mkdir -p no_access_dir && chmod 000 no_access_dir && cd no_access_dir 2>/dev/null || echo "Permission denied handled correctly" && chmod 755 no_access_dir && rmdir no_access_dir
cd && pwd
export HOME=/tmp && cd && pwd && export HOME=$OLDPWD
mkdir dir1 && cd dir1 && mkdir dir2 && cd dir2 && mkdir dir3 && cd dir3 && pwd && cd ../../.. && pwd && rm -rf dir1
mkdir test1 && cd $PWD/test1 && pwd && cd .. && cd ./test1 && pwd && cd .. && rmdir test1
mkdir -p a/b/c && cd a && pwd && cd b && pwd && cd - && pwd && cd $OLDPWD/c && pwd && cd ../../.. && rm -rf a
rm -rf a file infile infile2 outfile1 outfileinvalid outfile5 infile4 1 out out1 out2 outfile output output.txt "test*.txt" ../1 all_texts errorlog "file with spaces.txt" file1 file2 file3
rm -rf empty dir1 parent path
